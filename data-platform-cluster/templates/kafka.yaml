apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ required "Must set clusterName" .Values.kafka.clusterName }}
spec:
  kafka:
    version: {{ .Values.kafka.version }}
    replicas: {{ .Values.kafka.replicas }}
    authorization:
      type: simple
    listeners:
      - name: external
        port: 9094
        type: loadbalancer
        tls: true
        authentication:
          type: tls
    config:
      offsets.topic.replication.factor: {{ .Values.kafka.config.offsetsTopicReplicationFactor }}
      transaction.state.log.replication.factor: {{ .Values.kafka.config.transaction.state.log.replicationFactor }}
      transaction.state.log.min.isr: {{ .Values.kafka.config.transaction.state.log.minIsr }}
      default.replication.factor: {{ .Values.kafka.config.defaultReplicationFactor }}
      min.insync.replicas: {{ .Values.kafka.config.minInsyncReplicas }}
      inter.broker.protocol.version: {{ .Values.kafka.config.interBrokerProtocolVersion }}
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: {{ .Values.kafka.storage.size }}
        deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yaml
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
  zookeeper:
    replicas: {{ .Values.zookeeper.replicas }}
    storage:
      type: persistent-claim
      size: {{ .Values.zookeeper.storage.size }}
      deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: zookeeper-metrics
          key: zookeeper-metrics.yaml
  entityOperator:
    topicOperator: {}
    userOperator: {}